---
// Assets
import Cross from "@/components/assets/Cross.astro";
import { Image } from "astro:assets";
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Text from "@/components/fundations/elements/Text.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
// Components
import ShareButtons from "@/components/fundations/elements/ShareButtons.astro";
import BlogEntry from "@/components/blog/BlogEntry.astro";
// Content
const { frontmatter } = Astro.props;
import { getEntry } from "astro:content";
const team = await getEntry("team", frontmatter.team);
// Get all posts and filter by tag
import { getCollection } from "astro:content";
const allPosts = await getCollection("posts");
const relatedPosts = allPosts.filter((post) =>
  post.data.tags.some((tag) => frontmatter.tags.includes(tag))
);
---

<BaseLayout>
  <section class="overflow-hidden">
    <Wrapper variant="standard" class="pt-32 pb-12 relative">
      <!-- Top Right Plus -->
    
      <div class="flex flex-col justify-between text-center text-balance">
        <div>
          <Text tag="p" variant="textXS" class="text-base-500">
            Written in
            <span class="font-medium text-base-500">
              <time datetime={new Date(frontmatter.pubDate).toISOString()}>
                {
                  new Date(frontmatter.pubDate).toLocaleDateString("en-US", {
                    year: "numeric",
                    month: "long",
                    day: "2-digit",
                  })
                }
              </time> in
              {
                frontmatter.tags.map((tag) => (
                  <>
                    <a href={`/blog/tags/${tag}`} class="capitalize ">
                      {tag}
                    </a>
                  </>
                ))
              }
            </span>
          </Text>
          <Text
            tag="h1"
            variant="displayXL"
            class="tracking-tight text-white font-display mt-12"
          >
            {frontmatter.title}
          </Text>
          <Text
            tag="p"
            variant="textBase"
            class="max-w-xl mx-auto mt-4 text-base-400"
          >
            {frontmatter.description}
          </Text>
        </div>
      </div>
    </Wrapper>
    <div class={`aspect-12/4 p-4 -mx-px ${frontmatter.bgColor} h-full `}></div>
    <Wrapper variant="standard" class="py-12 border-t overflow-hidden">
      <div class="max-w-xl mx-auto">
        <Wrapper variant="prose">
          <slot />
        </Wrapper>
        <div class="w-full pt-8 mt-8">
          {
            team && (
              <div class="grid grid-cols-2 md:grid-cols-2">
                <div>
                  <a href={`/team/${team.slug}`}>
                    {team?.data?.image?.url && (
                      <Image
                        width={800}
                        height={800}
                        src={team.data.image.url}
                        alt={team.data.image.alt}
                        class="object-cover w-full aspect-12/8"
                      />
                    )}
                  </a>
                  <div class=" p-4 pt-24  bg-base-900">
                    <Text tag="p" variant="textXS" class="text-base-500 ">
                      This article was written by a{" "}
                      <span>{team.data.name}</span>
                      <span> {team.data.role}</span> specialist at Flabbergasted
                    </Text>
                  </div>
                </div>
                <div class={`size-full ${team.data.bgColor}`} />
              </div>
            )
          }
        </div>
        <div class="flex flex-wrap mt-12 gap-2">
          <Text tag="p" variant="textXS" class="text-base-500">
            Share this article:
          </Text>
          <ShareButtons description={frontmatter.description} />
        </div>
      </div>
    </Wrapper>
  </section>
  {
    relatedPosts.length > 0 && (
      <section>
        <Wrapper
          variant="standard"
          class="relative pt-24 pb-8 border-t lg:pt-32 border-base-800 overflow-hidden"
        >
          <Cross class="-top-[0.6rem] -right-[0.65rem]" />
          <Cross class="-top-[0.6rem] -left-[0.65rem]" />
          <Text tag="h2" variant="displayMD" class="text-white font-display">
            Related posts
          </Text>
        </Wrapper>
        <div class="relative grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-px border-t border-base-800">
          {relatedPosts.slice(0, 3).map((post) => (
            <BlogEntry post={post} />
          ))}
        </div>
      </section>
    )
  }
</BaseLayout>
