---
interface Props {
  variant?: "standard" | "standardPaddingless" | "prose"; // Define any variants you need
  class?: string; // Optional prop for additional classes
  id?: string; // Optional prop for additional classes
}
const { variant = "standard", class: extraClass = "" } = Astro.props;
// Map each variant to its specific classes
const variantClasses = {
  // Standard wrapper
  standard:
    "mx-auto  2xl:max-w-7xl  w-full  max-w-screen border-x-2 border-black px-8",
  standardPaddingless:
    "mx-auto  2xl:max-w-7xl  w-full  max-w-screen border-x-2 border-black",
  prose:
    "text-xl prose prose-xl text-black  prose-a:font-normal prose-a:text-accent-800 hover:prose-a:text-black prose-h1:text-black  prose-h2:text-black prose-img:shadow-lg  prose-headings:font-medium   prose-blockquote:border-2 prose-blockquote:bg-yellow-500 prose-img:rounded-3xl prose-img:border-2 prose-img:border-black prose-blockquote:p-12 prose-blockquote:border-black prose-blockquote:rounded-3xl prose-blockquote:shadow-lg   prose-pre:font-mono max-w-none prose-pre:border",
};
// Combine the classes for the specified variant with any extra classes
const classes = `${variantClasses[variant]} ${extraClass}`.trim();
---

<div class={classes}>
  <slot />
</div>
