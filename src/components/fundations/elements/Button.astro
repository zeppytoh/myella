---
const {
  variant,
  size,
  onlyIconSize,
  iconOnly = false,
  gap,
  isLink = false,
  class: className,
  ...rest
} = Astro.props;
const defaultClass = [
  "text-black",
  "bg-white",
  "shadow-black",
  "border-black",
  "hover:bg-accent-300",
  "focus:bg-black",
  "focus:text-white",
 
  "focus:shadow-none",
];
const accentClass = [
  "text-black",
  "bg-accent-200",
  "shadow-accent-500",
  "border-accent-500",
  "hover:bg-accent-300",
  "focus:bg-accent-500",
  "focus:text-white",
 
  "focus:shadow-none",
];
const mutedClass = [
  "text-black",
  "bg-white",
  "shadow-base-300",
  "border-base-300",
  "hover:bg-accent-50",
  "focus:bg-base-300",
  "focus:shadow-none",
];
// Size
const sizes = {
  xxs: ["h-8", "px-5", "py-2", "text-xs", "shadow-xs"],
  xs: ["h-9", "px-6", "py-3", "text-xs", "shadow-xs"],
  sm: ["h-10", "px-6", "py-3", "text-sm", "shadow-sm"],
  base: ["h-11", "px-8", "py-4", "text-sm", "shadow"],
  md: ["h-12", "px-8", "py-4", "text-base", "shadow"],
  lg: ["h-13", "px-8", "py-4", "text-lg", "shadow"],
  xl: ["h-14", "px-8", "py-4", "text-lg", "shadow"],
};
// Icon size
const iconSizes = {
  xxs: ["size-8", "py-2", "text-xs", "shadow-xs"],
  xs: ["size-9", "text-xs", "shadow-xs"],
  sm: ["size-10", "text-sm", "shadow-sm"],
  base: ["size-11", "text-sm", "shadow"],
  md: ["size-12", "text-md", "shadow"],
  lg: ["size-13", "text-lg", "shadow"],
  xl: ["size-14", "text-lg", "shadow"],
};
// Gaps
const gapMap = {
  xs: ["gap-2"],
  sm: ["gap-4"],
  base: ["gap-8"],
  md: ["gap-10"],
  lg: ["gap-12"],
};
const variantClass = {
  default: defaultClass,
  accent: accentClass,
  muted: mutedClass,
  none: [],
};
const sizeClass = iconOnly ? iconSizes[size] : sizes[size] || [];
const gapClass = !iconOnly && gap ? gapMap[gap] : [];
const additionalClasses = className ? className.split(" ") : [];
const baseClass = [
  "flex",
  "font-semibold",
  "ease-in-out",
  "text-center",
  "items-center",
  "duration-500",
  "border-2",
  "rounded-lg",
  "transition-all",
  "justify-center",
  "focus:outline-none",
  "focus:translate-y-1",
];
---

{
  isLink ? (
    <a
      href={rest.href}
      class:list={[
        ...baseClass,
        ...(variantClass[variant] || []),
        ...sizeClass,
        ...gapClass,
        ...additionalClasses,
      ]}
      {...rest}
    >
      {iconOnly ? (
        <slot name="icon" />
      ) : (
        <>
          <slot name="left-icon" />
          <slot />
          <slot name="right-icon" />
        </>
      )}
    </a>
  ) : (
    <button
      class:list={[
        ...baseClass,
        ...(variantClass[variant] || []),
        ...sizeClass,
        ...gapClass,
        ...additionalClasses,
      ]}
      {...rest}
    >
      {iconOnly ? (
        <slot name="icon" />
      ) : (
        <>
          <slot name="left-icon" />
          <slot />
          <slot name="right-icon" />
        </>
      )}
    </button>
  )
}
